// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: item.proto

// Specify package name to avoid name collision

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemTool_Tool int32

const (
	// https://ascii.jp/elem/000/004/124/4124022/
	ItemTool_Gen_1        ItemTool_Tool = 0
	ItemTool_Imagen_Video ItemTool_Tool = 1
	ItemTool_Make_Video   ItemTool_Tool = 2
	ItemTool_Versy        ItemTool_Tool = 3
)

// Enum value maps for ItemTool_Tool.
var (
	ItemTool_Tool_name = map[int32]string{
		0: "Gen_1",
		1: "Imagen_Video",
		2: "Make_Video",
		3: "Versy",
	}
	ItemTool_Tool_value = map[string]int32{
		"Gen_1":        0,
		"Imagen_Video": 1,
		"Make_Video":   2,
		"Versy":        3,
	}
)

func (x ItemTool_Tool) Enum() *ItemTool_Tool {
	p := new(ItemTool_Tool)
	*p = x
	return p
}

func (x ItemTool_Tool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemTool_Tool) Descriptor() protoreflect.EnumDescriptor {
	return file_item_proto_enumTypes[0].Descriptor()
}

func (ItemTool_Tool) Type() protoreflect.EnumType {
	return &file_item_proto_enumTypes[0]
}

func (x ItemTool_Tool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemTool_Tool.Descriptor instead.
func (ItemTool_Tool) EnumDescriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{2, 0}
}

type ItemCategory_Category int32

const (
	ItemCategory_YOUTUBE   ItemCategory_Category = 0
	ItemCategory_TWITTER   ItemCategory_Category = 1
	ItemCategory_INSTAGRAM ItemCategory_Category = 2
	ItemCategory_FACEBOOK  ItemCategory_Category = 3
	ItemCategory_LINKEDIN  ItemCategory_Category = 4
	ItemCategory_TIKTOK    ItemCategory_Category = 5
	ItemCategory_PINTEREST ItemCategory_Category = 6
	ItemCategory_REDDIT    ItemCategory_Category = 7
	ItemCategory_SNAPCHAT  ItemCategory_Category = 8
	ItemCategory_TUMBLR    ItemCategory_Category = 9
	ItemCategory_TWITCH    ItemCategory_Category = 10
	ItemCategory_WEIBO     ItemCategory_Category = 11
	ItemCategory_WECHAT    ItemCategory_Category = 12
	ItemCategory_WHATSAPP  ItemCategory_Category = 13
	ItemCategory_LINE      ItemCategory_Category = 14
	ItemCategory_TELEGRAM  ItemCategory_Category = 15
	ItemCategory_VK        ItemCategory_Category = 16
	ItemCategory_YAHOO     ItemCategory_Category = 17
	ItemCategory_OTHER     ItemCategory_Category = 18
)

// Enum value maps for ItemCategory_Category.
var (
	ItemCategory_Category_name = map[int32]string{
		0:  "YOUTUBE",
		1:  "TWITTER",
		2:  "INSTAGRAM",
		3:  "FACEBOOK",
		4:  "LINKEDIN",
		5:  "TIKTOK",
		6:  "PINTEREST",
		7:  "REDDIT",
		8:  "SNAPCHAT",
		9:  "TUMBLR",
		10: "TWITCH",
		11: "WEIBO",
		12: "WECHAT",
		13: "WHATSAPP",
		14: "LINE",
		15: "TELEGRAM",
		16: "VK",
		17: "YAHOO",
		18: "OTHER",
	}
	ItemCategory_Category_value = map[string]int32{
		"YOUTUBE":   0,
		"TWITTER":   1,
		"INSTAGRAM": 2,
		"FACEBOOK":  3,
		"LINKEDIN":  4,
		"TIKTOK":    5,
		"PINTEREST": 6,
		"REDDIT":    7,
		"SNAPCHAT":  8,
		"TUMBLR":    9,
		"TWITCH":    10,
		"WEIBO":     11,
		"WECHAT":    12,
		"WHATSAPP":  13,
		"LINE":      14,
		"TELEGRAM":  15,
		"VK":        16,
		"YAHOO":     17,
		"OTHER":     18,
	}
)

func (x ItemCategory_Category) Enum() *ItemCategory_Category {
	p := new(ItemCategory_Category)
	*p = x
	return p
}

func (x ItemCategory_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemCategory_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_item_proto_enumTypes[1].Descriptor()
}

func (ItemCategory_Category) Type() protoreflect.EnumType {
	return &file_item_proto_enumTypes[1]
}

func (x ItemCategory_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemCategory_Category.Descriptor instead.
func (ItemCategory_Category) EnumDescriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{3, 0}
}

type ItemSubCategory_SubCategory int32

const (
	ItemSubCategory_YOUTUBE   ItemSubCategory_SubCategory = 0
	ItemSubCategory_TWITTER   ItemSubCategory_SubCategory = 1
	ItemSubCategory_INSTAGRAM ItemSubCategory_SubCategory = 2
	ItemSubCategory_FACEBOOK  ItemSubCategory_SubCategory = 3
	ItemSubCategory_LINKEDIN  ItemSubCategory_SubCategory = 4
	ItemSubCategory_TIKTOK    ItemSubCategory_SubCategory = 5
	ItemSubCategory_PINTEREST ItemSubCategory_SubCategory = 6
	ItemSubCategory_REDDIT    ItemSubCategory_SubCategory = 7
	ItemSubCategory_SNAPCHAT  ItemSubCategory_SubCategory = 8
	ItemSubCategory_TUMBLR    ItemSubCategory_SubCategory = 9
	ItemSubCategory_TWITCH    ItemSubCategory_SubCategory = 10
	ItemSubCategory_WEIBO     ItemSubCategory_SubCategory = 11
	ItemSubCategory_WECHAT    ItemSubCategory_SubCategory = 12
	ItemSubCategory_WHATSAPP  ItemSubCategory_SubCategory = 13
	ItemSubCategory_LINE      ItemSubCategory_SubCategory = 14
	ItemSubCategory_TELEGRAM  ItemSubCategory_SubCategory = 15
	ItemSubCategory_VK        ItemSubCategory_SubCategory = 16
	ItemSubCategory_YAHOO     ItemSubCategory_SubCategory = 17
	ItemSubCategory_OTHER     ItemSubCategory_SubCategory = 18
)

// Enum value maps for ItemSubCategory_SubCategory.
var (
	ItemSubCategory_SubCategory_name = map[int32]string{
		0:  "YOUTUBE",
		1:  "TWITTER",
		2:  "INSTAGRAM",
		3:  "FACEBOOK",
		4:  "LINKEDIN",
		5:  "TIKTOK",
		6:  "PINTEREST",
		7:  "REDDIT",
		8:  "SNAPCHAT",
		9:  "TUMBLR",
		10: "TWITCH",
		11: "WEIBO",
		12: "WECHAT",
		13: "WHATSAPP",
		14: "LINE",
		15: "TELEGRAM",
		16: "VK",
		17: "YAHOO",
		18: "OTHER",
	}
	ItemSubCategory_SubCategory_value = map[string]int32{
		"YOUTUBE":   0,
		"TWITTER":   1,
		"INSTAGRAM": 2,
		"FACEBOOK":  3,
		"LINKEDIN":  4,
		"TIKTOK":    5,
		"PINTEREST": 6,
		"REDDIT":    7,
		"SNAPCHAT":  8,
		"TUMBLR":    9,
		"TWITCH":    10,
		"WEIBO":     11,
		"WECHAT":    12,
		"WHATSAPP":  13,
		"LINE":      14,
		"TELEGRAM":  15,
		"VK":        16,
		"YAHOO":     17,
		"OTHER":     18,
	}
)

func (x ItemSubCategory_SubCategory) Enum() *ItemSubCategory_SubCategory {
	p := new(ItemSubCategory_SubCategory)
	*p = x
	return p
}

func (x ItemSubCategory_SubCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemSubCategory_SubCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_item_proto_enumTypes[2].Descriptor()
}

func (ItemSubCategory_SubCategory) Type() protoreflect.EnumType {
	return &file_item_proto_enumTypes[2]
}

func (x ItemSubCategory_SubCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemSubCategory_SubCategory.Descriptor instead.
func (ItemSubCategory_SubCategory) EnumDescriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{4, 0}
}

type ItemSearchRequest_Tool int32

const (
	// https://ascii.jp/elem/000/004/124/4124022/
	ItemSearchRequest_Gen_1        ItemSearchRequest_Tool = 0
	ItemSearchRequest_Imagen_Video ItemSearchRequest_Tool = 1
	ItemSearchRequest_Make_Video   ItemSearchRequest_Tool = 2
	ItemSearchRequest_Versy        ItemSearchRequest_Tool = 3
)

// Enum value maps for ItemSearchRequest_Tool.
var (
	ItemSearchRequest_Tool_name = map[int32]string{
		0: "Gen_1",
		1: "Imagen_Video",
		2: "Make_Video",
		3: "Versy",
	}
	ItemSearchRequest_Tool_value = map[string]int32{
		"Gen_1":        0,
		"Imagen_Video": 1,
		"Make_Video":   2,
		"Versy":        3,
	}
)

func (x ItemSearchRequest_Tool) Enum() *ItemSearchRequest_Tool {
	p := new(ItemSearchRequest_Tool)
	*p = x
	return p
}

func (x ItemSearchRequest_Tool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemSearchRequest_Tool) Descriptor() protoreflect.EnumDescriptor {
	return file_item_proto_enumTypes[3].Descriptor()
}

func (ItemSearchRequest_Tool) Type() protoreflect.EnumType {
	return &file_item_proto_enumTypes[3]
}

func (x ItemSearchRequest_Tool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemSearchRequest_Tool.Descriptor instead.
func (ItemSearchRequest_Tool) EnumDescriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{10, 0}
}

type ItemSearchRequest_Category int32

const (
	ItemSearchRequest_YOUTUBE   ItemSearchRequest_Category = 0
	ItemSearchRequest_TWITTER   ItemSearchRequest_Category = 1
	ItemSearchRequest_INSTAGRAM ItemSearchRequest_Category = 2
	ItemSearchRequest_FACEBOOK  ItemSearchRequest_Category = 3
	ItemSearchRequest_LINKEDIN  ItemSearchRequest_Category = 4
	ItemSearchRequest_TIKTOK    ItemSearchRequest_Category = 5
	ItemSearchRequest_PINTEREST ItemSearchRequest_Category = 6
	ItemSearchRequest_REDDIT    ItemSearchRequest_Category = 7
	ItemSearchRequest_SNAPCHAT  ItemSearchRequest_Category = 8
	ItemSearchRequest_TUMBLR    ItemSearchRequest_Category = 9
	ItemSearchRequest_TWITCH    ItemSearchRequest_Category = 10
	ItemSearchRequest_WEIBO     ItemSearchRequest_Category = 11
	ItemSearchRequest_WECHAT    ItemSearchRequest_Category = 12
	ItemSearchRequest_WHATSAPP  ItemSearchRequest_Category = 13
	ItemSearchRequest_LINE      ItemSearchRequest_Category = 14
	ItemSearchRequest_TELEGRAM  ItemSearchRequest_Category = 15
	ItemSearchRequest_VK        ItemSearchRequest_Category = 16
	ItemSearchRequest_YAHOO     ItemSearchRequest_Category = 17
	ItemSearchRequest_OTHER     ItemSearchRequest_Category = 18
)

// Enum value maps for ItemSearchRequest_Category.
var (
	ItemSearchRequest_Category_name = map[int32]string{
		0:  "YOUTUBE",
		1:  "TWITTER",
		2:  "INSTAGRAM",
		3:  "FACEBOOK",
		4:  "LINKEDIN",
		5:  "TIKTOK",
		6:  "PINTEREST",
		7:  "REDDIT",
		8:  "SNAPCHAT",
		9:  "TUMBLR",
		10: "TWITCH",
		11: "WEIBO",
		12: "WECHAT",
		13: "WHATSAPP",
		14: "LINE",
		15: "TELEGRAM",
		16: "VK",
		17: "YAHOO",
		18: "OTHER",
	}
	ItemSearchRequest_Category_value = map[string]int32{
		"YOUTUBE":   0,
		"TWITTER":   1,
		"INSTAGRAM": 2,
		"FACEBOOK":  3,
		"LINKEDIN":  4,
		"TIKTOK":    5,
		"PINTEREST": 6,
		"REDDIT":    7,
		"SNAPCHAT":  8,
		"TUMBLR":    9,
		"TWITCH":    10,
		"WEIBO":     11,
		"WECHAT":    12,
		"WHATSAPP":  13,
		"LINE":      14,
		"TELEGRAM":  15,
		"VK":        16,
		"YAHOO":     17,
		"OTHER":     18,
	}
)

func (x ItemSearchRequest_Category) Enum() *ItemSearchRequest_Category {
	p := new(ItemSearchRequest_Category)
	*p = x
	return p
}

func (x ItemSearchRequest_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemSearchRequest_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_item_proto_enumTypes[4].Descriptor()
}

func (ItemSearchRequest_Category) Type() protoreflect.EnumType {
	return &file_item_proto_enumTypes[4]
}

func (x ItemSearchRequest_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemSearchRequest_Category.Descriptor instead.
func (ItemSearchRequest_Category) EnumDescriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{10, 1}
}

type ItemSearchRequest_SubCategory int32

const (
	ItemSearchRequest_YOUTUBE_P ItemSearchRequest_SubCategory = 0
)

// Enum value maps for ItemSearchRequest_SubCategory.
var (
	ItemSearchRequest_SubCategory_name = map[int32]string{
		0: "YOUTUBE_P",
	}
	ItemSearchRequest_SubCategory_value = map[string]int32{
		"YOUTUBE_P": 0,
	}
)

func (x ItemSearchRequest_SubCategory) Enum() *ItemSearchRequest_SubCategory {
	p := new(ItemSearchRequest_SubCategory)
	*p = x
	return p
}

func (x ItemSearchRequest_SubCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemSearchRequest_SubCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_item_proto_enumTypes[5].Descriptor()
}

func (ItemSearchRequest_SubCategory) Type() protoreflect.EnumType {
	return &file_item_proto_enumTypes[5]
}

func (x ItemSearchRequest_SubCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemSearchRequest_SubCategory.Descriptor instead.
func (ItemSearchRequest_SubCategory) EnumDescriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{10, 2}
}

// ユーザー情報を表すメッセージ型
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid            string             `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId          int64              `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title           string             `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description     string             `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Thumbnail       string             `protobuf:"bytes,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	Price           int64              `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	AspRate         int64              `protobuf:"varint,9,opt,name=asp_rate,json=aspRate,proto3" json:"asp_rate,omitempty"`                          // aspの料率
	RequestProgress bool               `protobuf:"varint,11,opt,name=request_progress,json=requestProgress,proto3" json:"request_progress,omitempty"` //コンテンツの審査
	IsOpen          bool               `protobuf:"varint,12,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`                            //下書き false:下書き true:公開
	CreatedAt       string             `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string             `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsDeleted       bool               `protobuf:"varint,15,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	ItemContent     []*ItemContent     `protobuf:"bytes,16,rep,name=item_content,json=itemContent,proto3" json:"item_content,omitempty"`
	ItemCategory    []*ItemCategory    `protobuf:"bytes,17,rep,name=item_category,json=itemCategory,proto3" json:"item_category,omitempty"`
	ItemSubCategory []*ItemSubCategory `protobuf:"bytes,18,rep,name=item_sub_category,json=itemSubCategory,proto3" json:"item_sub_category,omitempty"`
	Like            []*Like            `protobuf:"bytes,19,rep,name=like,proto3" json:"like,omitempty"`
	// not in db
	LikeCount     int64 `protobuf:"varint,20,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CommentCount  int64 `protobuf:"varint,21,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	ViewCount     int64 `protobuf:"varint,22,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	PurchaseCount int64 `protobuf:"varint,23,opt,name=purchase_count,json=purchaseCount,proto3" json:"purchase_count,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Item) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *Item) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetAspRate() int64 {
	if x != nil {
		return x.AspRate
	}
	return 0
}

func (x *Item) GetRequestProgress() bool {
	if x != nil {
		return x.RequestProgress
	}
	return false
}

func (x *Item) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

func (x *Item) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Item) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Item) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Item) GetItemContent() []*ItemContent {
	if x != nil {
		return x.ItemContent
	}
	return nil
}

func (x *Item) GetItemCategory() []*ItemCategory {
	if x != nil {
		return x.ItemCategory
	}
	return nil
}

func (x *Item) GetItemSubCategory() []*ItemSubCategory {
	if x != nil {
		return x.ItemSubCategory
	}
	return nil
}

func (x *Item) GetLike() []*Like {
	if x != nil {
		return x.Like
	}
	return nil
}

func (x *Item) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Item) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Item) GetViewCount() int64 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *Item) GetPurchaseCount() int64 {
	if x != nil {
		return x.PurchaseCount
	}
	return 0
}

type ItemContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId  int64  `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ItemContent) Reset() {
	*x = ItemContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemContent) ProtoMessage() {}

func (x *ItemContent) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemContent.ProtoReflect.Descriptor instead.
func (*ItemContent) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{1}
}

func (x *ItemContent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemContent) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ItemContent) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemContent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// service
type ItemTool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string        `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId    int64         `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Tool      ItemTool_Tool `protobuf:"varint,5,opt,name=tool,proto3,enum=item.ItemTool_Tool" json:"tool,omitempty"`
	CreatedAt string        `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string        `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ItemTool) Reset() {
	*x = ItemTool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemTool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemTool) ProtoMessage() {}

func (x *ItemTool) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemTool.ProtoReflect.Descriptor instead.
func (*ItemTool) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{2}
}

func (x *ItemTool) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemTool) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ItemTool) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemTool) GetTool() ItemTool_Tool {
	if x != nil {
		return x.Tool
	}
	return ItemTool_Gen_1
}

func (x *ItemTool) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ItemTool) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ItemCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string                `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId    int64                 `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Category  ItemCategory_Category `protobuf:"varint,5,opt,name=category,proto3,enum=item.ItemCategory_Category" json:"category,omitempty"`
	CreatedAt string                `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string                `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ItemCategory) Reset() {
	*x = ItemCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCategory) ProtoMessage() {}

func (x *ItemCategory) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCategory.ProtoReflect.Descriptor instead.
func (*ItemCategory) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{3}
}

func (x *ItemCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemCategory) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ItemCategory) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemCategory) GetCategory() ItemCategory_Category {
	if x != nil {
		return x.Category
	}
	return ItemCategory_YOUTUBE
}

func (x *ItemCategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ItemCategory) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// ユーザー情報を表すメッセージ型
type ItemSubCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid        string                      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ItemId      int64                       `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SubCategory ItemSubCategory_SubCategory `protobuf:"varint,5,opt,name=sub_category,json=subCategory,proto3,enum=item.ItemSubCategory_SubCategory" json:"sub_category,omitempty"`
	CreatedAt   string                      `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string                      `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ItemSubCategory) Reset() {
	*x = ItemSubCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSubCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSubCategory) ProtoMessage() {}

func (x *ItemSubCategory) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSubCategory.ProtoReflect.Descriptor instead.
func (*ItemSubCategory) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{4}
}

func (x *ItemSubCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemSubCategory) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ItemSubCategory) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemSubCategory) GetSubCategory() ItemSubCategory_SubCategory {
	if x != nil {
		return x.SubCategory
	}
	return ItemSubCategory_YOUTUBE
}

func (x *ItemSubCategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ItemSubCategory) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type ItemList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*Item `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *ItemList) Reset() {
	*x = ItemList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemList) ProtoMessage() {}

func (x *ItemList) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemList.ProtoReflect.Descriptor instead.
func (*ItemList) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{5}
}

func (x *ItemList) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

// request
type ItemIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ItemIdRequest) Reset() {
	*x = ItemIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemIdRequest) ProtoMessage() {}

func (x *ItemIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemIdRequest.ProtoReflect.Descriptor instead.
func (*ItemIdRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{6}
}

func (x *ItemIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ItemIdListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
}

func (x *ItemIdListRequest) Reset() {
	*x = ItemIdListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemIdListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemIdListRequest) ProtoMessage() {}

func (x *ItemIdListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemIdListRequest.ProtoReflect.Descriptor instead.
func (*ItemIdListRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{7}
}

func (x *ItemIdListRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

type ItemUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ItemUserIdRequest) Reset() {
	*x = ItemUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUserIdRequest) ProtoMessage() {}

func (x *ItemUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUserIdRequest.ProtoReflect.Descriptor instead.
func (*ItemUserIdRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{8}
}

func (x *ItemUserIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// response
type ItemBoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error bool `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ItemBoolResponse) Reset() {
	*x = ItemBoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemBoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemBoolResponse) ProtoMessage() {}

func (x *ItemBoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemBoolResponse.ProtoReflect.Descriptor instead.
func (*ItemBoolResponse) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{9}
}

func (x *ItemBoolResponse) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

type ItemSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64                           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FreeWord    string                          `protobuf:"bytes,2,opt,name=free_word,json=freeWord,proto3" json:"free_word,omitempty"`
	Tool        []ItemSearchRequest_Tool        `protobuf:"varint,3,rep,packed,name=tool,proto3,enum=item.ItemSearchRequest_Tool" json:"tool,omitempty"`
	Category    []ItemSearchRequest_Category    `protobuf:"varint,4,rep,packed,name=category,proto3,enum=item.ItemSearchRequest_Category" json:"category,omitempty"`
	SubCategory []ItemSearchRequest_SubCategory `protobuf:"varint,5,rep,packed,name=sub_category,json=subCategory,proto3,enum=item.ItemSearchRequest_SubCategory" json:"sub_category,omitempty"`
}

func (x *ItemSearchRequest) Reset() {
	*x = ItemSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemSearchRequest) ProtoMessage() {}

func (x *ItemSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_item_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemSearchRequest.ProtoReflect.Descriptor instead.
func (*ItemSearchRequest) Descriptor() ([]byte, []int) {
	return file_item_proto_rawDescGZIP(), []int{10}
}

func (x *ItemSearchRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ItemSearchRequest) GetFreeWord() string {
	if x != nil {
		return x.FreeWord
	}
	return ""
}

func (x *ItemSearchRequest) GetTool() []ItemSearchRequest_Tool {
	if x != nil {
		return x.Tool
	}
	return nil
}

func (x *ItemSearchRequest) GetCategory() []ItemSearchRequest_Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ItemSearchRequest) GetSubCategory() []ItemSearchRequest_SubCategory {
	if x != nil {
		return x.SubCategory
	}
	return nil
}

var File_item_proto protoreflect.FileDescriptor

var file_item_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x05, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x73, 0x70, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x61, 0x73, 0x70, 0x52, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x37, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d,
	0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x64, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x08,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x6f, 0x6f, 0x6c, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x04,
	0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x6e, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x6b, 0x65, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x65, 0x72, 0x73, 0x79, 0x10, 0x03, 0x22, 0xbc, 0x03, 0x0a,
	0x0c, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xf7, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b,
	0x0a, 0x07, 0x59, 0x4f, 0x55, 0x54, 0x55, 0x42, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54,
	0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54,
	0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42,
	0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49,
	0x4e, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x49, 0x4b, 0x54, 0x4f, 0x4b, 0x10, 0x05, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x45, 0x44, 0x44, 0x49, 0x54, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4e,
	0x41, 0x50, 0x43, 0x48, 0x41, 0x54, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x55, 0x4d, 0x42,
	0x4c, 0x52, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x0a,
	0x12, 0x09, 0x0a, 0x05, 0x57, 0x45, 0x49, 0x42, 0x4f, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x57,
	0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x48, 0x41, 0x54, 0x53,
	0x41, 0x50, 0x50, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x0e, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x0f, 0x12, 0x06, 0x0a,
	0x02, 0x56, 0x4b, 0x10, 0x10, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x41, 0x48, 0x4f, 0x4f, 0x10, 0x11,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x12, 0x22, 0xcf, 0x03, 0x0a, 0x0f,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0c,
	0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x75,
	0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xfa, 0x01, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x0b, 0x0a, 0x07, 0x59, 0x4f, 0x55, 0x54, 0x55, 0x42, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e,
	0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43,
	0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45,
	0x44, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x49, 0x4b, 0x54, 0x4f, 0x4b, 0x10,
	0x05, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x10, 0x06,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x44, 0x44, 0x49, 0x54, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x4e, 0x41, 0x50, 0x43, 0x48, 0x41, 0x54, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x55,
	0x4d, 0x42, 0x4c, 0x52, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48,
	0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x45, 0x49, 0x42, 0x4f, 0x10, 0x0b, 0x12, 0x0a, 0x0a,
	0x06, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x48, 0x41,
	0x54, 0x53, 0x41, 0x50, 0x50, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x0f, 0x12,
	0x06, 0x0a, 0x02, 0x56, 0x4b, 0x10, 0x10, 0x12, 0x09, 0x0a, 0x05, 0x59, 0x41, 0x48, 0x4f, 0x4f,
	0x10, 0x11, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x12, 0x22, 0x2a, 0x0a,
	0x08, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x1f, 0x0a, 0x0d, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2c, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x10, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd9, 0x04, 0x0a, 0x11, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x6c, 0x52,
	0x04, 0x74, 0x6f, 0x6f, 0x6c, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0b,
	0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x3e, 0x0a, 0x04, 0x54,
	0x6f, 0x6f, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x5f, 0x31, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x6e, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x6b, 0x65, 0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x56, 0x65, 0x72, 0x73, 0x79, 0x10, 0x03, 0x22, 0xf7, 0x01, 0x0a, 0x08,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x59, 0x4f, 0x55, 0x54,
	0x55, 0x42, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x54, 0x49, 0x4b, 0x54, 0x4f, 0x4b, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x44, 0x44,
	0x49, 0x54, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4e, 0x41, 0x50, 0x43, 0x48, 0x41, 0x54,
	0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x55, 0x4d, 0x42, 0x4c, 0x52, 0x10, 0x09, 0x12, 0x0a,
	0x0a, 0x06, 0x54, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x45,
	0x49, 0x42, 0x4f, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10,
	0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x48, 0x41, 0x54, 0x53, 0x41, 0x50, 0x50, 0x10, 0x0d, 0x12,
	0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c,
	0x45, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x0f, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x4b, 0x10, 0x10, 0x12,
	0x09, 0x0a, 0x05, 0x59, 0x41, 0x48, 0x4f, 0x4f, 0x10, 0x11, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54,
	0x48, 0x45, 0x52, 0x10, 0x12, 0x22, 0x1c, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x59, 0x4f, 0x55, 0x54, 0x55, 0x42, 0x45, 0x5f,
	0x50, 0x10, 0x00, 0x32, 0xb8, 0x06, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x0a, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0a, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x16, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x13, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0a, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6c,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x17, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d, 0x67, 0x6f, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_item_proto_rawDescOnce sync.Once
	file_item_proto_rawDescData = file_item_proto_rawDesc
)

func file_item_proto_rawDescGZIP() []byte {
	file_item_proto_rawDescOnce.Do(func() {
		file_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_proto_rawDescData)
	})
	return file_item_proto_rawDescData
}

var file_item_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_item_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_item_proto_goTypes = []interface{}{
	(ItemTool_Tool)(0),                 // 0: item.ItemTool.Tool
	(ItemCategory_Category)(0),         // 1: item.ItemCategory.Category
	(ItemSubCategory_SubCategory)(0),   // 2: item.ItemSubCategory.SubCategory
	(ItemSearchRequest_Tool)(0),        // 3: item.ItemSearchRequest.Tool
	(ItemSearchRequest_Category)(0),    // 4: item.ItemSearchRequest.Category
	(ItemSearchRequest_SubCategory)(0), // 5: item.ItemSearchRequest.SubCategory
	(*Item)(nil),                       // 6: item.Item
	(*ItemContent)(nil),                // 7: item.ItemContent
	(*ItemTool)(nil),                   // 8: item.ItemTool
	(*ItemCategory)(nil),               // 9: item.ItemCategory
	(*ItemSubCategory)(nil),            // 10: item.ItemSubCategory
	(*ItemList)(nil),                   // 11: item.ItemList
	(*ItemIdRequest)(nil),              // 12: item.ItemIdRequest
	(*ItemIdListRequest)(nil),          // 13: item.ItemIdListRequest
	(*ItemUserIdRequest)(nil),          // 14: item.ItemUserIdRequest
	(*ItemBoolResponse)(nil),           // 15: item.ItemBoolResponse
	(*ItemSearchRequest)(nil),          // 16: item.ItemSearchRequest
	(*Like)(nil),                       // 17: like.Like
	(*emptypb.Empty)(nil),              // 18: google.protobuf.Empty
}
var file_item_proto_depIdxs = []int32{
	7,  // 0: item.Item.item_content:type_name -> item.ItemContent
	9,  // 1: item.Item.item_category:type_name -> item.ItemCategory
	10, // 2: item.Item.item_sub_category:type_name -> item.ItemSubCategory
	17, // 3: item.Item.like:type_name -> like.Like
	0,  // 4: item.ItemTool.tool:type_name -> item.ItemTool.Tool
	1,  // 5: item.ItemCategory.category:type_name -> item.ItemCategory.Category
	2,  // 6: item.ItemSubCategory.sub_category:type_name -> item.ItemSubCategory.SubCategory
	6,  // 7: item.ItemList.item:type_name -> item.Item
	3,  // 8: item.ItemSearchRequest.tool:type_name -> item.ItemSearchRequest.Tool
	4,  // 9: item.ItemSearchRequest.category:type_name -> item.ItemSearchRequest.Category
	5,  // 10: item.ItemSearchRequest.sub_category:type_name -> item.ItemSearchRequest.SubCategory
	6,  // 11: item.ItemService.Create:input_type -> item.Item
	6,  // 12: item.ItemService.Update:input_type -> item.Item
	12, // 13: item.ItemService.Delete:input_type -> item.ItemIdRequest
	12, // 14: item.ItemService.GetById:input_type -> item.ItemIdRequest
	14, // 15: item.ItemService.GetListByUser:input_type -> item.ItemUserIdRequest
	16, // 16: item.ItemService.GetListBySearch:input_type -> item.ItemSearchRequest
	14, // 17: item.ItemService.GetLatestList:input_type -> item.ItemUserIdRequest
	14, // 18: item.ItemService.GetTrendList:input_type -> item.ItemUserIdRequest
	14, // 19: item.ItemService.GetRecommendedListByUser:input_type -> item.ItemUserIdRequest
	14, // 20: item.ItemService.GetSoldListByUser:input_type -> item.ItemUserIdRequest
	14, // 21: item.ItemService.GetPurchasedListByUser:input_type -> item.ItemUserIdRequest
	14, // 22: item.ItemService.GetLikedListByUser:input_type -> item.ItemUserIdRequest
	13, // 23: item.ItemService.GetListByIdList:input_type -> item.ItemIdListRequest
	18, // 24: item.ItemService.GetAll:input_type -> google.protobuf.Empty
	6,  // 25: item.ItemService.Create:output_type -> item.Item
	15, // 26: item.ItemService.Update:output_type -> item.ItemBoolResponse
	15, // 27: item.ItemService.Delete:output_type -> item.ItemBoolResponse
	6,  // 28: item.ItemService.GetById:output_type -> item.Item
	11, // 29: item.ItemService.GetListByUser:output_type -> item.ItemList
	11, // 30: item.ItemService.GetListBySearch:output_type -> item.ItemList
	11, // 31: item.ItemService.GetLatestList:output_type -> item.ItemList
	11, // 32: item.ItemService.GetTrendList:output_type -> item.ItemList
	11, // 33: item.ItemService.GetRecommendedListByUser:output_type -> item.ItemList
	11, // 34: item.ItemService.GetSoldListByUser:output_type -> item.ItemList
	11, // 35: item.ItemService.GetPurchasedListByUser:output_type -> item.ItemList
	11, // 36: item.ItemService.GetLikedListByUser:output_type -> item.ItemList
	11, // 37: item.ItemService.GetListByIdList:output_type -> item.ItemList
	11, // 38: item.ItemService.GetAll:output_type -> item.ItemList
	25, // [25:39] is the sub-list for method output_type
	11, // [11:25] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_item_proto_init() }
func file_item_proto_init() {
	if File_item_proto != nil {
		return
	}
	file_like_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemTool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSubCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemIdListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemBoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_item_proto_goTypes,
		DependencyIndexes: file_item_proto_depIdxs,
		EnumInfos:         file_item_proto_enumTypes,
		MessageInfos:      file_item_proto_msgTypes,
	}.Build()
	File_item_proto = out.File
	file_item_proto_rawDesc = nil
	file_item_proto_goTypes = nil
	file_item_proto_depIdxs = nil
}
